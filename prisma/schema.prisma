// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Example {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Categories {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  image            String?
  parentCategoryId String?      @db.ObjectId
  parentCategory   Categories?  @relation("subCategory", fields: [parentCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subCategory      Categories[] @relation("subCategory")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  User             User?        @relation(fields: [userId], references: [id])
  userId           String?
}

// Next-Auth

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid()) @map("_id")
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  role          String?      @default("customer")
  Account       Account[]
  Session       Session[]
  categories    Categories[]
}
